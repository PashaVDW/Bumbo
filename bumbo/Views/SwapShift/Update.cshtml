@model bumbo.ViewModels.UpdateSwapShiftViewModel

<div class="max-w-4xl mx-auto py-8">
    <h1 class="text-2xl font-bold mb-6 text-center">Welke dienst wil je bewerken?</h1>

    <div class="mb-6 flex justify-between items-center">
        <input id="searchInput"
               type="text"
               placeholder="Zoek naar een dienst (bijv. datum of taak)"
               class="w-full border border-gray-300 rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-blue-400"
               onkeyup="filterTable()" />
        <button type="button"
                onclick="filterTable()"
                class="ml-4 bg-gray-800 text-white px-6 py-2 rounded-md hover:bg-gray-700">
            Zoeken
        </button>
    </div>

    <form method="post" id="updateForm" action="/ShiftSwap/Update">
        <input type="hidden" name="SelectedUitgaandeDienstRuil.SendToEmployeeId" value="@Model.SelectedUitgaandeDienstRuil.SendToEmployeeId" />
        <input type="hidden" name="SelectedUitgaandeDienstRuil.EmployeeId" value="@Model.SelectedUitgaandeDienstRuil.EmployeeId" />
        <input type="hidden" name="SelectedUitgaandeDienstRuil.BranchId" value="@Model.SelectedUitgaandeDienstRuil.BranchId" />
        <input type="hidden" name="SelectedUitgaandeDienstRuil.Date" value="@Model.SelectedUitgaandeDienstRuil.Date.ToString("yyyy-MM-dd")" />

        <table id="scheduleTable" class="w-full border border-gray-300 rounded-lg overflow-hidden">
            <thead class="bg-gray-100">
                <tr>
                    <th class="text-left px-4 py-2">Datum</th>
                    <th class="text-left px-4 py-2">Taak</th>
                    <th class="text-left px-4 py-2">Beschikbare tijden</th>
                    <th class="text-center px-4 py-2">Actie</th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Schedules.Count; i++)
                {
                    var schedule = Model.Schedules[i];
                    <tr class="border-t">
                        <td class="px-4 py-2">@schedule.Date.ToString("dddd dd MMMM yyyy")</td>
                        <td class="px-4 py-2">@schedule.DepartmentName</td>
                        <td class="px-4 py-2">
                            @schedule.StartTime.ToString("HH:mm") - @schedule.EndTime.ToString("HH:mm")
                        </td>
                        <td class="px-4 py-2 text-center">
                            <input type="hidden" name="Schedules.Index" value="@i" />
                            <input type="hidden" name="Schedules[@i].IsSelected" value="false" />
                            <input type="hidden" name="Schedules[@i].Date" value="@schedule.Date" />
                            <input type="hidden" name="Schedules[@i].StartTime" value="@schedule.StartTime" />
                            <input type="hidden" name="Schedules[@i].EndTime" value="@schedule.EndTime" />
                            <input type="hidden" name="Schedules[@i].DepartmentName" value="@schedule.DepartmentName" />

                            <button type="button"
                                    class="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600"
                                    onclick="selectSchedule(@i)">
                                Kies
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="mt-4 flex justify-end">
            <button type="submit" class="bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600">
                Opslaan
            </button>
        </div>
    </form>

    <div class="mt-6 flex justify-center">
        <a href="/ShiftSwap"
           class="bg-gray-800 text-white px-6 py-2 rounded-md hover:bg-gray-700">
            Verder zonder veranderingen
        </a>
    </div>
</div>

<script>
    function filterTable() {
        const input = document.getElementById('searchInput').value.toLowerCase();
        const table = document.getElementById('scheduleTable');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {
            const cells = rows[i].getElementsByTagName('td');
            let isMatch = false;

            for (let j = 0; j < cells.length; j++) {
                if (cells[j]) {
                    const cellContent = cells[j].textContent || cells[j].innerText;
                    if (cellContent.toLowerCase().indexOf(input) > -1) {
                        isMatch = true;
                        break;
                    }
                }
            }

            rows[i].style.display = isMatch ? '' : 'none';
        }
    }

    function selectSchedule(index) {
        const input = document.querySelector(`input[name="Schedules[${index}].IsSelected"]`);
        if (input) {
            input.value = "true";
        }

        const form = document.getElementById("updateForm");
        const formData = new FormData(form);

        fetch(form.action, {
            method: "POST",
            body: formData,
        }).then(response => {
            if (response.ok) {
                alert("Dienst geselecteerd!");
            } else {
                alert("Er ging iets mis bij het selecteren van de dienst.");
            }
        }).catch(error => {
            console.error("Fout bij het selecteren van de dienst:", error);
        });
    }
</script>
