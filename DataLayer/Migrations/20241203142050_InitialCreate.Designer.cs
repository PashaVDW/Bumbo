// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bumbo.Data;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(BumboDBContext))]
    [Migration("20241203142050_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrognosisId")
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ShelfMeeters")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BranchId");

                    b.HasIndex("CountryName");

                    b.HasIndex("PrognosisId");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            ClosingTime = new TimeOnly(18, 0, 0),
                            CountryName = "Netherlands",
                            HouseNumber = "10",
                            Name = "Amsterdam Filiaal",
                            OpeningTime = new TimeOnly(9, 0, 0),
                            PostalCode = "1012LG",
                            ShelfMeeters = 0,
                            Street = "Damrak"
                        },
                        new
                        {
                            BranchId = 2,
                            ClosingTime = new TimeOnly(17, 0, 0),
                            CountryName = "Belgium",
                            HouseNumber = "20",
                            Name = "Brussels Filiaal",
                            OpeningTime = new TimeOnly(8, 0, 0),
                            PostalCode = "1000",
                            ShelfMeeters = 0,
                            Street = "Grote Markt"
                        },
                        new
                        {
                            BranchId = 3,
                            ClosingTime = new TimeOnly(21, 0, 0),
                            CountryName = "Netherlands",
                            HouseNumber = "2",
                            Name = "Alkmaar Filiaal",
                            OpeningTime = new TimeOnly(9, 0, 0),
                            PostalCode = "1811KH",
                            ShelfMeeters = 0,
                            Street = "Paardenmarkt"
                        },
                        new
                        {
                            BranchId = 4,
                            ClosingTime = new TimeOnly(17, 0, 0),
                            CountryName = "Netherlands",
                            HouseNumber = "15",
                            Name = "Rotterdam Filiaal",
                            OpeningTime = new TimeOnly(9, 0, 0),
                            PostalCode = "3011HE",
                            ShelfMeeters = 0,
                            Street = "Botersloot"
                        },
                        new
                        {
                            BranchId = 5,
                            ClosingTime = new TimeOnly(22, 0, 0),
                            CountryName = "Netherlands",
                            HouseNumber = "22",
                            Name = "Den Haag Filiaal",
                            OpeningTime = new TimeOnly(9, 0, 0),
                            PostalCode = "2511AG",
                            ShelfMeeters = 0,
                            Street = "Binnenhof"
                        },
                        new
                        {
                            BranchId = 6,
                            ClosingTime = new TimeOnly(18, 0, 0),
                            CountryName = "Netherlands",
                            HouseNumber = "18",
                            Name = "Leiden Filiaal",
                            OpeningTime = new TimeOnly(8, 0, 0),
                            PostalCode = "2311GP",
                            ShelfMeeters = 0,
                            Street = "Breestraat"
                        },
                        new
                        {
                            BranchId = 7,
                            ClosingTime = new TimeOnly(17, 0, 0),
                            CountryName = "Belgium",
                            HouseNumber = "56",
                            Name = "Gent Filiaal",
                            OpeningTime = new TimeOnly(9, 0, 0),
                            PostalCode = "9000",
                            ShelfMeeters = 0,
                            Street = "Veldstraat"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Availability", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Availability");

                    b.HasData(
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(10, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(10, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 23),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 24),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(12, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 30),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 12, 1),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Department", b =>
                {
                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentName");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentName = "Kassa"
                        },
                        new
                        {
                            DepartmentName = "Vakkenvullen"
                        },
                        new
                        {
                            DepartmentName = "Vers"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.EmployeeHasDepartment", b =>
                {
                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentName", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeHasDepartment");

                    b.HasData(
                        new
                        {
                            DepartmentName = "Vakkenvullen",
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd"
                        },
                        new
                        {
                            DepartmentName = "Kassa",
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0"
                        },
                        new
                        {
                            DepartmentName = "Vers",
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8"
                        },
                        new
                        {
                            DepartmentName = "Kassa",
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9"
                        },
                        new
                        {
                            DepartmentName = "Vers",
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2"
                        },
                        new
                        {
                            DepartmentName = "Vakkenvullen",
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab"
                        },
                        new
                        {
                            DepartmentName = "Kassa",
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1"
                        },
                        new
                        {
                            DepartmentName = "Vers",
                            EmployeeId = "a3b3c4d5-67f8-9a01-b2c3-d4e5f6g7h8i9"
                        },
                        new
                        {
                            DepartmentName = "Kassa",
                            EmployeeId = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1"
                        },
                        new
                        {
                            DepartmentName = "Vakkenvullen",
                            EmployeeId = "c5d6e7f8-90g1-2a34-b5c6-d7e8f9g0h1i2"
                        },
                        new
                        {
                            DepartmentName = "Vers",
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3"
                        },
                        new
                        {
                            DepartmentName = "Vakkenvullen",
                            EmployeeId = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4"
                        },
                        new
                        {
                            DepartmentName = "Kassa",
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Function", b =>
                {
                    b.Property<string>("FunctionName")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("FunctionName");

                    b.ToTable("Functions");

                    b.HasData(
                        new
                        {
                            FunctionName = "Cashier"
                        },
                        new
                        {
                            FunctionName = "Stocker"
                        },
                        new
                        {
                            FunctionName = "Manager"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.LabourRules", b =>
                {
                    b.Property<string>("CountryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AgeGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeSpan>("MaxEndTime")
                        .HasColumnType("time");

                    b.Property<int>("MaxHoursPerDay")
                        .HasColumnType("int");

                    b.Property<int>("MaxHoursPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("MaxHoursWithSchool")
                        .HasColumnType("int");

                    b.Property<int>("MaxOvertimeHoursPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("MaxShiftDuration")
                        .HasColumnType("int");

                    b.Property<int>("MaxWorkDaysPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("MinRestDaysPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("MinRestHoursBetweenShifts")
                        .HasColumnType("int");

                    b.Property<int>("MinutesOfBreak")
                        .HasColumnType("int");

                    b.Property<int>("NumHoursWorkedBeforeBreak")
                        .HasColumnType("int");

                    b.Property<decimal>("OvertimePayPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("SickPayPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("CountryName", "AgeGroup");

                    b.ToTable("LabourRules");

                    b.HasData(
                        new
                        {
                            CountryName = "Netherlands",
                            AgeGroup = "<16",
                            MaxEndTime = new TimeSpan(0, 19, 0, 0, 0),
                            MaxHoursPerDay = 8,
                            MaxHoursPerWeek = 40,
                            MaxHoursWithSchool = 12,
                            MaxOvertimeHoursPerWeek = 0,
                            MaxShiftDuration = 8,
                            MaxWorkDaysPerWeek = 5,
                            MinRestDaysPerWeek = 2,
                            MinRestHoursBetweenShifts = 12,
                            MinutesOfBreak = 30,
                            NumHoursWorkedBeforeBreak = 4,
                            OvertimePayPercentage = 0m,
                            SickPayPercentage = 70m
                        },
                        new
                        {
                            CountryName = "Netherlands",
                            AgeGroup = "16-17",
                            MaxEndTime = new TimeSpan(0, 22, 0, 0, 0),
                            MaxHoursPerDay = 9,
                            MaxHoursPerWeek = 40,
                            MaxHoursWithSchool = 40,
                            MaxOvertimeHoursPerWeek = 0,
                            MaxShiftDuration = 9,
                            MaxWorkDaysPerWeek = 5,
                            MinRestDaysPerWeek = 2,
                            MinRestHoursBetweenShifts = 12,
                            MinutesOfBreak = 30,
                            NumHoursWorkedBeforeBreak = 4,
                            OvertimePayPercentage = 0m,
                            SickPayPercentage = 70m
                        },
                        new
                        {
                            CountryName = "Netherlands",
                            AgeGroup = ">17",
                            MaxEndTime = new TimeSpan(1, 0, 0, 0, 0),
                            MaxHoursPerDay = 12,
                            MaxHoursPerWeek = 60,
                            MaxHoursWithSchool = 0,
                            MaxOvertimeHoursPerWeek = 20,
                            MaxShiftDuration = 12,
                            MaxWorkDaysPerWeek = 6,
                            MinRestDaysPerWeek = 1,
                            MinRestHoursBetweenShifts = 11,
                            MinutesOfBreak = 30,
                            NumHoursWorkedBeforeBreak = 4,
                            OvertimePayPercentage = 150m,
                            SickPayPercentage = 70m
                        });
                });

            modelBuilder.Entity("DataLayer.Models.PrognosisHasDaysHasDepartment", b =>
                {
                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DayName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PrognosisId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("AmountOfWorkersNeeded")
                        .HasColumnType("int");

                    b.Property<int>("HoursOfWorkNeeded")
                        .HasColumnType("int");

                    b.HasKey("DepartmentName", "DayName", "PrognosisId");

                    b.HasIndex("DayName", "PrognosisId");

                    b.ToTable("PrognosisHasDaysHasDepartment");

                    b.HasData(
                        new
                        {
                            DepartmentName = "Kassa",
                            DayName = "Monday",
                            PrognosisId = "prognosis_week_47_2024",
                            AmountOfWorkersNeeded = 3,
                            HoursOfWorkNeeded = 24
                        },
                        new
                        {
                            DepartmentName = "Vakkenvullen",
                            DayName = "Monday",
                            PrognosisId = "prognosis_week_47_2024",
                            AmountOfWorkersNeeded = 4,
                            HoursOfWorkNeeded = 32
                        },
                        new
                        {
                            DepartmentName = "Vers",
                            DayName = "Monday",
                            PrognosisId = "prognosis_week_47_2024",
                            AmountOfWorkersNeeded = 2,
                            HoursOfWorkNeeded = 16
                        },
                        new
                        {
                            DepartmentName = "Kassa",
                            DayName = "Tuesday",
                            PrognosisId = "prognosis_week_47_2024",
                            AmountOfWorkersNeeded = 2,
                            HoursOfWorkNeeded = 16
                        },
                        new
                        {
                            DepartmentName = "Vakkenvullen",
                            DayName = "Tuesday",
                            PrognosisId = "prognosis_week_47_2024",
                            AmountOfWorkersNeeded = 3,
                            HoursOfWorkNeeded = 24
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Schedule", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSick")
                        .HasColumnType("bit");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "BranchId", "Date");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentName");

                    b.HasIndex("TemplateId");

                    b.ToTable("Schedule");

                    b.HasData(
                        new
                        {
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(13, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(17, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(12, 0, 0),
                            IsFinal = true,
                            IsSick = true,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(16, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(21, 30, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 18),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 19),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 19),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 19),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 19),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 19),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(12, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 19),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "a3b3c4d5-67f8-9a01-b2c3-d4e5f6g7h8i9",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(22, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(15, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 20),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(20, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 21),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(15, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 21),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(21, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 21),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(13, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 21),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(20, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 21),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(15, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 21),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(20, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 22),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(13, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 22),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(17, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 22),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(12, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 22),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(16, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 22),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 22),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 23),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(13, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 23),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(17, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 23),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(12, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 23),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 23),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 23),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 24),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 24),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 24),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(16, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 24),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(14, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            BranchId = 1,
                            Date = new DateOnly(2024, 11, 24),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(18, 0, 0),
                            IsFinal = true,
                            IsSick = false,
                            StartTime = new TimeOnly(14, 0, 0)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.SchoolSchedule", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Date", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SchoolSchedule");

                    b.HasData(
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 18),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 19),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 20),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 21),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 22),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 25),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 26),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 27),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 28),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            Date = new DateOnly(2024, 11, 29),
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(14, 30, 0)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.SwitchRequest", b =>
                {
                    b.Property<string>("SendToEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("Declined")
                        .HasColumnType("bit");

                    b.HasKey("SendToEmployeeId", "EmployeeId", "BranchId", "Date");

                    b.HasIndex("EmployeeId", "BranchId", "Date");

                    b.ToTable("SwitchRequest");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsSystemManager")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ManagerOfBranchId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerOfBranchId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f7g7h8i9-01j2-3c45-g6h7-i8j9k0l1m2n3",
                            AccessFailedCount = 0,
                            BID = "B001",
                            BirthDate = new DateTime(1985, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4527dc66-a479-484b-bd46-df9aecbc695a",
                            Email = "john.doe@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            HouseNumber = 10,
                            IsSystemManager = true,
                            LastName = "Doe",
                            LockoutEnabled = false,
                            ManagerOfBranchId = 1,
                            MiddleName = "A.",
                            NormalizedEmail = "JOHN.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHN.DOE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEE7y8h2dF+V7tEr/s1w3/Lz2AWMMtfxg4Ly5wn31+hu6FGcrRvNsBYBaRQhAq53IMg==",
                            PhoneNumber = "06-9876543",
                            PhoneNumberConfirmed = false,
                            PostalCode = "12345",
                            SecurityStamp = "80e74e63-82d7-400b-aee4-f14e4e06ccf9",
                            StartDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "john.doe@example.com"
                        },
                        new
                        {
                            Id = "e6f6g7h8-90i1-2b34-f5g6-h7i8j9k0l1m2",
                            AccessFailedCount = 0,
                            BID = "B002",
                            BirthDate = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b53f6e98-93cc-442e-a562-6f72181ee0da",
                            Email = "jane.smith@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jane",
                            HouseNumber = 22,
                            IsSystemManager = false,
                            LastName = "Smith",
                            LockoutEnabled = false,
                            MiddleName = "B.",
                            NormalizedEmail = "JANE.SMITH@EXAMPLE.COM",
                            NormalizedUserName = "JANE.SMITH@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAmDpNG98pzvY627s6bj8x5RrJ+tAGupJa4+VD6WKyezWpvs5t0V4f3ItjP+7BcHMg==",
                            PhoneNumber = "06-12345678",
                            PhoneNumberConfirmed = false,
                            PostalCode = "9271 GB",
                            SecurityStamp = "527e345d-25a8-4530-83a0-e58926dd38c3",
                            StartDate = new DateTime(2012, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "jane.smith@example.com"
                        },
                        new
                        {
                            Id = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            AccessFailedCount = 0,
                            BID = "B003",
                            BirthDate = new DateTime(1992, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5c15cb4b-7ab7-464e-9eeb-2c7543f219d7",
                            Email = "darlon.vandijk@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Darlon",
                            HouseNumber = 5,
                            IsSystemManager = false,
                            LastName = "van Dijk",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "DARLON.VANDIJK@HOTMAIL.COM",
                            NormalizedUserName = "DARLON.VANDIJK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIfuQqssZSDuntIg4x3NLCtbWBUTCGYFI4sg583XT5wrxNxO6tlDx2BB5bH2gshxhw==",
                            PhoneNumber = "+31 6 34567890",
                            PhoneNumberConfirmed = false,
                            PostalCode = "8329 SK",
                            SecurityStamp = "e0efda38-2236-4014-a69b-9039990f88dc",
                            StartDate = new DateTime(2018, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "darlon.vandijk@hotmail.com"
                        },
                        new
                        {
                            Id = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            AccessFailedCount = 0,
                            BID = "B004",
                            BirthDate = new DateTime(1980, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1123a354-6ea4-4b8e-83e8-47c86b20601e",
                            Email = "pasha.bakker@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Pasha",
                            HouseNumber = 15,
                            IsSystemManager = false,
                            LastName = "Bakker",
                            LockoutEnabled = false,
                            ManagerOfBranchId = 3,
                            MiddleName = "",
                            NormalizedEmail = "PASHA.BAKKER@GMAIL.COM",
                            NormalizedUserName = "PASHA.BAKKER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIuWHufxTPiGBEmbMkXP3ni92Qu/dO1Bjg9yOqD+R5VIlCQKBjGq2yW1Kr27XbN0dw==",
                            PhoneNumber = "+31 6 45678901",
                            PhoneNumberConfirmed = false,
                            PostalCode = "3894 HT",
                            SecurityStamp = "43623a5f-9701-4d49-882f-4658e7ed67f9",
                            StartDate = new DateTime(2010, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "pasha.bakker@gmail.com"
                        },
                        new
                        {
                            Id = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            AccessFailedCount = 0,
                            BID = "B005",
                            BirthDate = new DateTime(1988, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a83cfd57-467d-4c1b-b32a-d0128a543e19",
                            Email = "sarah.vanderven@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Sarah",
                            HouseNumber = 8,
                            IsSystemManager = false,
                            LastName = "van der Ven",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "SARAH.VANDERVEN@HOTMAIL.COM",
                            NormalizedUserName = "SARAH.VANDERVEN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGEa6Gd0PH9r64OFDX4TN36JSgeC1kULv+ODXJ5rw8yhBqmexbuRXlZmnYGUTWyAfg==",
                            PhoneNumber = "+31 6 56789012",
                            PhoneNumberConfirmed = false,
                            PostalCode = "2933 KJ",
                            SecurityStamp = "4ce795e9-a981-4a8d-8636-a336f5dcd556",
                            StartDate = new DateTime(2017, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "sarah.vanderven@hotmail.com"
                        },
                        new
                        {
                            Id = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            AccessFailedCount = 0,
                            BID = "B006",
                            BirthDate = new DateTime(1995, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "949ee553-9aa8-45bf-b055-444a51e60577",
                            Email = "david.denboer@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "David",
                            HouseNumber = 30,
                            IsSystemManager = false,
                            LastName = "den Boer",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "DAVID.DENBOER@GMAIL.COM",
                            NormalizedUserName = "DAVID.DENBOER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBPwsU/t9/fqtH2feaX1Mz4XLm3507spzzA0RIIYwGS1/MJEkQEYhw82Cbafo6B/jg==",
                            PhoneNumber = "+31 6 67890123",
                            PhoneNumberConfirmed = false,
                            PostalCode = "4293 BF",
                            SecurityStamp = "37949469-496b-4d18-a224-043117827204",
                            StartDate = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "david.denboer@gmail.com"
                        },
                        new
                        {
                            Id = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            AccessFailedCount = 0,
                            BID = "B012",
                            BirthDate = new DateTime(1993, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2bad6f3b-3644-45cf-8b24-0df81b5a4a2b",
                            Email = "anthony.ross@example.com",
                            EmailConfirmed = true,
                            FirstName = "Anthony",
                            HouseNumber = 7,
                            IsSystemManager = false,
                            LastName = "Ross",
                            LockoutEnabled = false,
                            ManagerOfBranchId = 1,
                            MiddleName = "",
                            NormalizedEmail = "ANTHONY.ROSS@EXAMPLE.COM",
                            NormalizedUserName = "ANTHONY.ROSS@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECoIcHUEwS+eFGhfJQwaoEX6rG2a3yn6vd9Mnin882kft5SfI3lWInB/dmZk+gEfzg==",
                            PhoneNumber = "+31 6 12345678",
                            PhoneNumberConfirmed = false,
                            PostalCode = "2234 AB",
                            SecurityStamp = "05e15973-42ec-41c3-a69c-d82a3d10df92",
                            StartDate = new DateTime(2024, 12, 3, 15, 20, 48, 445, DateTimeKind.Local).AddTicks(4500),
                            TwoFactorEnabled = false,
                            UserName = "anthony.ross@example.com"
                        },
                        new
                        {
                            Id = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            AccessFailedCount = 0,
                            BID = "B013",
                            BirthDate = new DateTime(1987, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bf4d3247-a56d-4a70-abce-1dc97c228ee4",
                            Email = "douwe.jansen@example.com",
                            EmailConfirmed = true,
                            FirstName = "Douwe",
                            HouseNumber = 12,
                            IsSystemManager = false,
                            LastName = "Jansen",
                            LockoutEnabled = false,
                            ManagerOfBranchId = 2,
                            MiddleName = "",
                            NormalizedEmail = "DOUWE.JANSEN@EXAMPLE.COM",
                            NormalizedUserName = "DOUWE.JANSEN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAED6YAohNHJ9Dy+pvESNae5hTDVbmXDaEacxQ4xxaHswCOxdTlDldizwe8+XC//skkg==",
                            PhoneNumber = "+31 6 87654321",
                            PhoneNumberConfirmed = false,
                            PostalCode = "3345 CD",
                            SecurityStamp = "f73bc38f-8389-45dc-8c54-4f6088e68128",
                            StartDate = new DateTime(2024, 12, 3, 15, 20, 48, 524, DateTimeKind.Local).AddTicks(8333),
                            TwoFactorEnabled = false,
                            UserName = "douwe.jansen@example.com"
                        },
                        new
                        {
                            Id = "a3b3c4d5-67f8-9a01-b2c3-d4e5f6g7h8i9",
                            AccessFailedCount = 0,
                            BID = "B004",
                            BirthDate = new DateTime(1985, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0205ca0c-14cf-49d8-ad00-0471141437fb",
                            Email = "jan.devries@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jan",
                            HouseNumber = 12,
                            IsSystemManager = false,
                            LastName = "de Vries",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "JAN.DEVRIES@EXAMPLE.COM",
                            NormalizedUserName = "JAN.DEVRIES@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAMpCfzlJS63wEDt58+UY/qQ0R1g385P+BB7/sy5ZEb3pglgAPhxPFnaxc/OZGpqRw==",
                            PhoneNumber = "+31 6 12345678",
                            PhoneNumberConfirmed = false,
                            PostalCode = "1234 AB",
                            SecurityStamp = "cc1e7bee-87a0-4138-b9f3-cd1851589134",
                            StartDate = new DateTime(2017, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "jan.devries@example.com"
                        },
                        new
                        {
                            Id = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1",
                            AccessFailedCount = 0,
                            BID = "B005",
                            BirthDate = new DateTime(1990, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "60e14d38-95b9-403c-8cd9-17ccc3de6e8c",
                            Email = "sofie.jansen@example.com",
                            EmailConfirmed = true,
                            FirstName = "Sofie",
                            HouseNumber = 30,
                            IsSystemManager = false,
                            LastName = "Jansen",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "SOFIE.JANSEN@EXAMPLE.COM",
                            NormalizedUserName = "SOFIE.JANSEN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEITIORtul/jxnoLMVzo+ga/KjTlHzFC3QqAcec8F9+VqfCASY6YSU6ZlT0S9HaGk/A==",
                            PhoneNumber = "+31 6 23456789",
                            PhoneNumberConfirmed = false,
                            PostalCode = "9876 ZX",
                            SecurityStamp = "1ae23c71-194d-4c77-8369-81850abed3c9",
                            StartDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "sofie.jansen@example.com"
                        },
                        new
                        {
                            Id = "c5d6e7f8-90g1-2a34-b5c6-d7e8f9g0h1i2",
                            AccessFailedCount = 0,
                            BID = "B006",
                            BirthDate = new DateTime(1988, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "82c053ff-0228-407d-9f85-28196c46a107",
                            Email = "tom.koster@example.com",
                            EmailConfirmed = true,
                            FirstName = "Tom",
                            HouseNumber = 15,
                            IsSystemManager = false,
                            LastName = "Koster",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "TOM.KOSTER@EXAMPLE.COM",
                            NormalizedUserName = "TOM.KOSTER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFsoRomvIF4ctHWoPhwP0zFzwvpWL9waFeqQ6jIAw6CSSBNdYtvdbDz0C8xUxxWq2A==",
                            PhoneNumber = "+31 6 34567890",
                            PhoneNumberConfirmed = false,
                            PostalCode = "6543 BC",
                            SecurityStamp = "76453309-3784-44ec-957a-5da1bafb24fc",
                            StartDate = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "tom.koster@example.com"
                        },
                        new
                        {
                            Id = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            AccessFailedCount = 0,
                            BID = "B007",
                            BirthDate = new DateTime(1995, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "264d26cf-11f1-4b2f-bd61-2329c2548afd",
                            Email = "lisa.hendriks@example.com",
                            EmailConfirmed = true,
                            FirstName = "Lisa",
                            HouseNumber = 8,
                            IsSystemManager = false,
                            LastName = "Hendriks",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "LISA.HENDRIKS@EXAMPLE.COM",
                            NormalizedUserName = "LISA.HENDRIKS@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBaG3r9LjejRCXS25N9zApIDvvmYZ7Y36kQY0o92RYDmxqT/GkmSXr4vkpIFlQ7Zag==",
                            PhoneNumber = "+31 6 98765432",
                            PhoneNumberConfirmed = false,
                            PostalCode = "2345 PQ",
                            SecurityStamp = "77f4508a-36cf-4aec-973e-4f24842611ac",
                            StartDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "lisa.hendriks@example.com"
                        },
                        new
                        {
                            Id = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4",
                            AccessFailedCount = 0,
                            BID = "B008",
                            BirthDate = new DateTime(1983, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ff6bf92d-4760-4087-b181-b29811611625",
                            Email = "mark.willems@example.com",
                            EmailConfirmed = true,
                            FirstName = "Mark",
                            HouseNumber = 25,
                            IsSystemManager = false,
                            LastName = "Willems",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "MARK.WILLEMS@EXAMPLE.COM",
                            NormalizedUserName = "MARK.WILLEMS@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHOvw/YE7k8Ukn4V0R2kDCHTK8rzYi8cFYLu3FlFjJEkP7Fdb9wekE31IOZ13XOQYg==",
                            PhoneNumber = "+31 6 12341234",
                            PhoneNumberConfirmed = false,
                            PostalCode = "5678 MN",
                            SecurityStamp = "df06bcb3-5a04-4656-af12-a899e689a719",
                            StartDate = new DateTime(2016, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "mark.willems@example.com"
                        },
                        new
                        {
                            Id = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            AccessFailedCount = 0,
                            BID = "B009",
                            BirthDate = new DateTime(1994, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "269c9bf8-cfe8-4794-8f25-4855dec39780",
                            Email = "eva.smit@example.com",
                            EmailConfirmed = true,
                            FirstName = "Eva",
                            HouseNumber = 10,
                            IsSystemManager = false,
                            LastName = "Smit",
                            LockoutEnabled = false,
                            MiddleName = "",
                            NormalizedEmail = "EVA.SMIR@EXAMPLE.COM",
                            NormalizedUserName = "EVA.SMIR@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPty7V+jEbGSmZWt8Kh/ivdI5WEfaPNzy3NnfV026k6qLGsmmp9s7RUfu+x2neA1wA==",
                            PhoneNumber = "+31 6 87654321",
                            PhoneNumberConfirmed = false,
                            PostalCode = "5678 KL",
                            SecurityStamp = "28ffb585-2431-4cb5-91ee-12e1d1965263",
                            StartDate = new DateTime(2022, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "eva.smit@example.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RequestStatus", b =>
                {
                    b.Property<string>("RequestStatusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RequestStatusName");

                    b.ToTable("RequestStatus");

                    b.HasData(
                        new
                        {
                            RequestStatusName = "In Afwachting"
                        },
                        new
                        {
                            RequestStatusName = "Afgewezen"
                        },
                        new
                        {
                            RequestStatusName = "Geaccepteerd"
                        });
                });

            modelBuilder.Entity("bumbo.Models.BranchHasEmployee", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FunctionName")
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BranchId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FunctionName");

                    b.ToTable("BranchHasEmployees");

                    b.HasData(
                        new
                        {
                            BranchId = 2,
                            EmployeeId = "d5e5f6g7-89h0-1a23-e4f5-g6h7i8j9k0l1",
                            FunctionName = "Manager",
                            StartDate = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 3,
                            EmployeeId = "b3c3d4e5-67f8-9a01-c2d3-e4f5g6h7i8j9",
                            FunctionName = "Manager",
                            StartDate = new DateTime(2010, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 4,
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            FunctionName = "Stocker",
                            StartDate = new DateTime(2018, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 3,
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            FunctionName = "Cashier",
                            StartDate = new DateTime(2017, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 1,
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            FunctionName = "Cashier",
                            StartDate = new DateTime(2024, 12, 3, 15, 20, 48, 445, DateTimeKind.Local).AddTicks(4500)
                        },
                        new
                        {
                            BranchId = 2,
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            FunctionName = "Stocker",
                            StartDate = new DateTime(2024, 12, 3, 15, 20, 48, 524, DateTimeKind.Local).AddTicks(8333)
                        },
                        new
                        {
                            BranchId = 4,
                            EmployeeId = "a3b3c4d5-67f8-9a01-b2c3-d4e5f6g7h8i9",
                            FunctionName = "Manager",
                            StartDate = new DateTime(2017, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 6,
                            EmployeeId = "b4c5d6e7-89f0-1a23-b4c5-d6e7f8g9h0i1",
                            FunctionName = "Stocker",
                            StartDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 5,
                            EmployeeId = "c5d6e7f8-90g1-2a34-b5c6-d7e8f9g0h1i2",
                            FunctionName = "Cashier",
                            StartDate = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 6,
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            FunctionName = "Cashier",
                            StartDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 7,
                            EmployeeId = "e7f8g9h0-12i3-4a56-b7c8-d9e0f1g2h3i4",
                            FunctionName = "Stocker",
                            StartDate = new DateTime(2016, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BranchId = 7,
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            FunctionName = "Stocker",
                            StartDate = new DateTime(2022, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bumbo.Models.BranchRequestsEmployee", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RequestToBranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNeeded")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("RequestStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("BranchId", "EmployeeId", "RequestToBranchId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestStatusName");

                    b.HasIndex("RequestToBranchId");

                    b.ToTable("BranchRequestsEmployee");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            EmployeeId = "b2c2d2e2-2222-3333-4444-5555abcdefab",
                            RequestToBranchId = 2,
                            DateNeeded = new DateTime(2024, 12, 10, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2168),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(17, 0, 0),
                            Message = "Overplaatsing nodig vanwege projectdeadline.",
                            RequestStatusName = "In Afwachting",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            BranchId = 2,
                            EmployeeId = "a1b1c1d1-1111-2222-3333-4444abcdabcd",
                            RequestToBranchId = 1,
                            DateNeeded = new DateTime(2024, 12, 17, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2267),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(16, 0, 0),
                            Message = "Er zijn te weinig medewerkers op deze datum beschikbaar.",
                            RequestStatusName = "In Afwachting",
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            BranchId = 3,
                            EmployeeId = "a2b2d3e4-56f7-8a90-b1c2-d3e4f5g6h7i8",
                            RequestToBranchId = 4,
                            DateNeeded = new DateTime(2024, 12, 13, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2273),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(17, 30, 0),
                            Message = "Hulp nodig vanwege ziekte van een collega.",
                            RequestStatusName = "Afgewezen",
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            BranchId = 1,
                            EmployeeId = "c4d4e5f6-78g9-0a12-d3e4-f5g6h7i8j9k0",
                            RequestToBranchId = 3,
                            DateNeeded = new DateTime(2024, 12, 23, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2278),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(16, 0, 0),
                            Message = "Overplaatsing voor trainingssessies.",
                            RequestStatusName = "Geaccepteerd",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            BranchId = 2,
                            EmployeeId = "f9e8d7c6-1234-5678-90ab-cdef12345678",
                            RequestToBranchId = 1,
                            DateNeeded = new DateTime(2024, 12, 13, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2299),
                            DepartmentName = "Kassa",
                            EndTime = new TimeOnly(18, 0, 0),
                            Message = "Overplaatsing wegens tijdelijke afwezigheid van manager.",
                            RequestStatusName = "In Afwachting",
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            BranchId = 3,
                            EmployeeId = "a3b3c4d5-67f8-9a01-b2c3-d4e5f6g7h8i9",
                            RequestToBranchId = 4,
                            DateNeeded = new DateTime(2024, 12, 17, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2330),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(16, 30, 0),
                            Message = "Verzoek om overplaatsing vanwege persoonlijke redenen, afgewezen.",
                            RequestStatusName = "Afgewezen",
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            BranchId = 4,
                            EmployeeId = "c5d6e7f8-90g1-2a34-b5c6-d7e8f9g0h1i2",
                            RequestToBranchId = 5,
                            DateNeeded = new DateTime(2024, 12, 8, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2377),
                            DepartmentName = "Vakkenvullen",
                            EndTime = new TimeOnly(17, 0, 0),
                            Message = "Overplaatsing gewenst door nieuwe strategische focus in het bedrijf.",
                            RequestStatusName = "In Afwachting",
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            BranchId = 5,
                            EmployeeId = "d6e7f8g9-01h2-3a45-b6c7-d8e9f0g1h2i3",
                            RequestToBranchId = 6,
                            DateNeeded = new DateTime(2024, 12, 23, 15, 20, 49, 134, DateTimeKind.Local).AddTicks(2384),
                            DepartmentName = "Vers",
                            EndTime = new TimeOnly(16, 0, 0),
                            Message = "Verzoek om overplaatsing vanwege training in nieuwe technologie.",
                            RequestStatusName = "In Afwachting",
                            StartTime = new TimeOnly(8, 0, 0)
                        });
                });

            modelBuilder.Entity("bumbo.Models.Country", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Name");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Name = "Netherlands"
                        },
                        new
                        {
                            Name = "Belgium"
                        },
                        new
                        {
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("bumbo.Models.Days", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Name");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            Name = "Maandag"
                        },
                        new
                        {
                            Name = "Dinsdag"
                        },
                        new
                        {
                            Name = "Woensdag"
                        },
                        new
                        {
                            Name = "Donderdag"
                        },
                        new
                        {
                            Name = "Vrijdag"
                        },
                        new
                        {
                            Name = "Zaterdag"
                        },
                        new
                        {
                            Name = "Zondag"
                        },
                        new
                        {
                            Name = "Monday"
                        },
                        new
                        {
                            Name = "Tuesday"
                        },
                        new
                        {
                            Name = "Wednesday"
                        },
                        new
                        {
                            Name = "Thursday"
                        },
                        new
                        {
                            Name = "Friday"
                        },
                        new
                        {
                            Name = "Saturday"
                        },
                        new
                        {
                            Name = "Sunday"
                        });
                });

            modelBuilder.Entity("bumbo.Models.Norm", b =>
                {
                    b.Property<int>("normId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("normId"));

                    b.Property<string>("activity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<int>("normInSeconds")
                        .HasColumnType("int");

                    b.Property<int>("week")
                        .HasColumnType("int");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("normId");

                    b.HasIndex("branchId", "year", "week", "activity")
                        .IsUnique();

                    b.ToTable("Norms");

                    b.HasData(
                        new
                        {
                            normId = 1,
                            activity = "Coli uitladen",
                            branchId = 1,
                            normInSeconds = 90,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 2,
                            activity = "Vakkenvullen",
                            branchId = 1,
                            normInSeconds = 33,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 3,
                            activity = "Kassa",
                            branchId = 1,
                            normInSeconds = 3,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 4,
                            activity = "Vers",
                            branchId = 1,
                            normInSeconds = 7,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 5,
                            activity = "Spiegelen",
                            branchId = 1,
                            normInSeconds = 2,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 6,
                            activity = "Coli uitladen",
                            branchId = 1,
                            normInSeconds = 95,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 7,
                            activity = "Vakkenvullen",
                            branchId = 1,
                            normInSeconds = 35,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 8,
                            activity = "Kassa",
                            branchId = 1,
                            normInSeconds = 3,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 9,
                            activity = "Vers",
                            branchId = 1,
                            normInSeconds = 8,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 10,
                            activity = "Spiegelen",
                            branchId = 1,
                            normInSeconds = 3,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 11,
                            activity = "Coli uitladen",
                            branchId = 2,
                            normInSeconds = 96,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 12,
                            activity = "Vakkenvullen",
                            branchId = 2,
                            normInSeconds = 32,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 13,
                            activity = "Kassa",
                            branchId = 2,
                            normInSeconds = 3,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 14,
                            activity = "Vers",
                            branchId = 2,
                            normInSeconds = 7,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 15,
                            activity = "Spiegelen",
                            branchId = 2,
                            normInSeconds = 2,
                            week = 41,
                            year = 2024
                        },
                        new
                        {
                            normId = 16,
                            activity = "Coli uitladen",
                            branchId = 2,
                            normInSeconds = 91,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 17,
                            activity = "Vakkenvullen",
                            branchId = 2,
                            normInSeconds = 32,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 18,
                            activity = "Kassa",
                            branchId = 2,
                            normInSeconds = 4,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 19,
                            activity = "Vers",
                            branchId = 2,
                            normInSeconds = 7,
                            week = 42,
                            year = 2024
                        },
                        new
                        {
                            normId = 20,
                            activity = "Spiegelen",
                            branchId = 2,
                            normInSeconds = 2,
                            week = 42,
                            year = 2024
                        });
                });

            modelBuilder.Entity("bumbo.Models.Prognosis", b =>
                {
                    b.Property<string>("PrognosisId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("WeekNr")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PrognosisId");

                    b.HasIndex("BranchId");

                    b.ToTable("Prognoses");

                    b.HasData(
                        new
                        {
                            PrognosisId = "1",
                            BranchId = 1,
                            WeekNr = 40,
                            Year = 2024
                        },
                        new
                        {
                            PrognosisId = "2",
                            BranchId = 1,
                            WeekNr = 20,
                            Year = 2024
                        },
                        new
                        {
                            PrognosisId = "prognosis_week_47_2024",
                            BranchId = 1,
                            WeekNr = 47,
                            Year = 2024
                        });
                });

            modelBuilder.Entity("bumbo.Models.PrognosisHasDays", b =>
                {
                    b.Property<string>("DayName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PrognosisId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("CustomerAmount")
                        .HasColumnType("int");

                    b.Property<int>("PackagesAmount")
                        .HasColumnType("int");

                    b.HasKey("DayName", "PrognosisId");

                    b.HasIndex("PrognosisId");

                    b.ToTable("PrognosisHasDays");

                    b.HasData(
                        new
                        {
                            DayName = "Maandag",
                            PrognosisId = "1",
                            CustomerAmount = 100,
                            PackagesAmount = 50
                        },
                        new
                        {
                            DayName = "Dinsdag",
                            PrognosisId = "1",
                            CustomerAmount = 120,
                            PackagesAmount = 60
                        },
                        new
                        {
                            DayName = "Woensdag",
                            PrognosisId = "1",
                            CustomerAmount = 130,
                            PackagesAmount = 55
                        },
                        new
                        {
                            DayName = "Donderdag",
                            PrognosisId = "1",
                            CustomerAmount = 110,
                            PackagesAmount = 45
                        },
                        new
                        {
                            DayName = "Vrijdag",
                            PrognosisId = "1",
                            CustomerAmount = 150,
                            PackagesAmount = 70
                        },
                        new
                        {
                            DayName = "Zaterdag",
                            PrognosisId = "1",
                            CustomerAmount = 160,
                            PackagesAmount = 80
                        },
                        new
                        {
                            DayName = "Zondag",
                            PrognosisId = "1",
                            CustomerAmount = 140,
                            PackagesAmount = 65
                        },
                        new
                        {
                            DayName = "Maandag",
                            PrognosisId = "2",
                            CustomerAmount = 90,
                            PackagesAmount = 40
                        },
                        new
                        {
                            DayName = "Dinsdag",
                            PrognosisId = "2",
                            CustomerAmount = 115,
                            PackagesAmount = 55
                        },
                        new
                        {
                            DayName = "Woensdag",
                            PrognosisId = "2",
                            CustomerAmount = 125,
                            PackagesAmount = 50
                        },
                        new
                        {
                            DayName = "Donderdag",
                            PrognosisId = "2",
                            CustomerAmount = 105,
                            PackagesAmount = 42
                        },
                        new
                        {
                            DayName = "Vrijdag",
                            PrognosisId = "2",
                            CustomerAmount = 140,
                            PackagesAmount = 68
                        },
                        new
                        {
                            DayName = "Zaterdag",
                            PrognosisId = "2",
                            CustomerAmount = 150,
                            PackagesAmount = 75
                        },
                        new
                        {
                            DayName = "Zondag",
                            PrognosisId = "2",
                            CustomerAmount = 130,
                            PackagesAmount = 60
                        },
                        new
                        {
                            DayName = "Monday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 200,
                            PackagesAmount = 300
                        },
                        new
                        {
                            DayName = "Tuesday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 150,
                            PackagesAmount = 250
                        },
                        new
                        {
                            DayName = "Wednesday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 220,
                            PackagesAmount = 280
                        },
                        new
                        {
                            DayName = "Thursday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 190,
                            PackagesAmount = 270
                        },
                        new
                        {
                            DayName = "Friday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 210,
                            PackagesAmount = 290
                        },
                        new
                        {
                            DayName = "Saturday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 250,
                            PackagesAmount = 320
                        },
                        new
                        {
                            DayName = "Sunday",
                            PrognosisId = "prognosis_week_47_2024",
                            CustomerAmount = 180,
                            PackagesAmount = 260
                        });
                });

            modelBuilder.Entity("bumbo.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchBranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("BranchBranchId");

                    b.ToTable("Templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchBranchId = 1,
                            Name = "Basic Package"
                        },
                        new
                        {
                            Id = 2,
                            BranchBranchId = 1,
                            Name = "Standard Package"
                        },
                        new
                        {
                            Id = 3,
                            BranchBranchId = 2,
                            Name = "Premium Package"
                        },
                        new
                        {
                            Id = 4,
                            BranchBranchId = 2,
                            Name = "Family Package"
                        },
                        new
                        {
                            Id = 5,
                            BranchBranchId = 1,
                            Name = "Weekly Special"
                        },
                        new
                        {
                            Id = 6,
                            BranchBranchId = 3,
                            Name = "Basic Package"
                        },
                        new
                        {
                            Id = 7,
                            BranchBranchId = 3,
                            Name = "Weekly Special"
                        },
                        new
                        {
                            Id = 8,
                            BranchBranchId = 4,
                            Name = "Basic Package"
                        },
                        new
                        {
                            Id = 9,
                            BranchBranchId = 4,
                            Name = "Weekly Special"
                        },
                        new
                        {
                            Id = 10,
                            BranchBranchId = 5,
                            Name = "Basic Package"
                        },
                        new
                        {
                            Id = 11,
                            BranchBranchId = 5,
                            Name = "Weekly Special"
                        },
                        new
                        {
                            Id = 12,
                            BranchBranchId = 6,
                            Name = "Basic Package"
                        },
                        new
                        {
                            Id = 13,
                            BranchBranchId = 6,
                            Name = "Weekly Special"
                        },
                        new
                        {
                            Id = 14,
                            BranchBranchId = 7,
                            Name = "Basic Package"
                        },
                        new
                        {
                            Id = 15,
                            BranchBranchId = 7,
                            Name = "Weekly Special"
                        });
                });

            modelBuilder.Entity("bumbo.Models.TemplateHasDays", b =>
                {
                    b.Property<int>("TemplatesId")
                        .HasColumnType("int");

                    b.Property<string>("DaysName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ContainerAmount")
                        .HasColumnType("int");

                    b.Property<int>("CustomerAmount")
                        .HasColumnType("int");

                    b.HasKey("TemplatesId", "DaysName");

                    b.HasIndex("DaysName");

                    b.ToTable("TemplateHasDays");

                    b.HasData(
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Monday",
                            ContainerAmount = 41,
                            CustomerAmount = 989
                        },
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Tuesday",
                            ContainerAmount = 52,
                            CustomerAmount = 825
                        },
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Wednesday",
                            ContainerAmount = 38,
                            CustomerAmount = 902
                        },
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Thursday",
                            ContainerAmount = 52,
                            CustomerAmount = 990
                        },
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Friday",
                            ContainerAmount = 39,
                            CustomerAmount = 1040
                        },
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Saturday",
                            ContainerAmount = 43,
                            CustomerAmount = 953
                        },
                        new
                        {
                            TemplatesId = 1,
                            DaysName = "Sunday",
                            ContainerAmount = 32,
                            CustomerAmount = 872
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Monday",
                            ContainerAmount = 42,
                            CustomerAmount = 916
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Tuesday",
                            ContainerAmount = 38,
                            CustomerAmount = 912
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Wednesday",
                            ContainerAmount = 32,
                            CustomerAmount = 902
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Thursday",
                            ContainerAmount = 45,
                            CustomerAmount = 940
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Friday",
                            ContainerAmount = 47,
                            CustomerAmount = 816
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Saturday",
                            ContainerAmount = 38,
                            CustomerAmount = 842
                        },
                        new
                        {
                            TemplatesId = 2,
                            DaysName = "Sunday",
                            ContainerAmount = 45,
                            CustomerAmount = 885
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Monday",
                            ContainerAmount = 53,
                            CustomerAmount = 872
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Tuesday",
                            ContainerAmount = 41,
                            CustomerAmount = 989
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Wednesday",
                            ContainerAmount = 42,
                            CustomerAmount = 916
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Thursday",
                            ContainerAmount = 36,
                            CustomerAmount = 875
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Friday",
                            ContainerAmount = 29,
                            CustomerAmount = 877
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Saturday",
                            ContainerAmount = 53,
                            CustomerAmount = 945
                        },
                        new
                        {
                            TemplatesId = 3,
                            DaysName = "Sunday",
                            ContainerAmount = 52,
                            CustomerAmount = 880
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Monday",
                            ContainerAmount = 49,
                            CustomerAmount = 900
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Tuesday",
                            ContainerAmount = 38,
                            CustomerAmount = 903
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Wednesday",
                            ContainerAmount = 45,
                            CustomerAmount = 930
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Thursday",
                            ContainerAmount = 42,
                            CustomerAmount = 985
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Friday",
                            ContainerAmount = 36,
                            CustomerAmount = 865
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Saturday",
                            ContainerAmount = 43,
                            CustomerAmount = 950
                        },
                        new
                        {
                            TemplatesId = 4,
                            DaysName = "Sunday",
                            ContainerAmount = 38,
                            CustomerAmount = 950
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Monday",
                            ContainerAmount = 52,
                            CustomerAmount = 832
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Tuesday",
                            ContainerAmount = 49,
                            CustomerAmount = 935
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Wednesday",
                            ContainerAmount = 29,
                            CustomerAmount = 877
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Thursday",
                            ContainerAmount = 41,
                            CustomerAmount = 989
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Friday",
                            ContainerAmount = 32,
                            CustomerAmount = 872
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Saturday",
                            ContainerAmount = 36,
                            CustomerAmount = 771
                        },
                        new
                        {
                            TemplatesId = 5,
                            DaysName = "Sunday",
                            ContainerAmount = 52,
                            CustomerAmount = 885
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Monday",
                            ContainerAmount = 42,
                            CustomerAmount = 987
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Tuesday",
                            ContainerAmount = 51,
                            CustomerAmount = 827
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Wednesday",
                            ContainerAmount = 39,
                            CustomerAmount = 901
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Thursday",
                            ContainerAmount = 53,
                            CustomerAmount = 992
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Friday",
                            ContainerAmount = 38,
                            CustomerAmount = 1045
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Saturday",
                            ContainerAmount = 42,
                            CustomerAmount = 957
                        },
                        new
                        {
                            TemplatesId = 6,
                            DaysName = "Sunday",
                            ContainerAmount = 33,
                            CustomerAmount = 874
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Monday",
                            ContainerAmount = 53,
                            CustomerAmount = 835
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Tuesday",
                            ContainerAmount = 50,
                            CustomerAmount = 934
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Wednesday",
                            ContainerAmount = 27,
                            CustomerAmount = 879
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Thursday",
                            ContainerAmount = 40,
                            CustomerAmount = 983
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Friday",
                            ContainerAmount = 33,
                            CustomerAmount = 871
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Saturday",
                            ContainerAmount = 38,
                            CustomerAmount = 761
                        },
                        new
                        {
                            TemplatesId = 7,
                            DaysName = "Sunday",
                            ContainerAmount = 51,
                            CustomerAmount = 889
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Monday",
                            ContainerAmount = 42,
                            CustomerAmount = 987
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Tuesday",
                            ContainerAmount = 51,
                            CustomerAmount = 827
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Wednesday",
                            ContainerAmount = 39,
                            CustomerAmount = 901
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Thursday",
                            ContainerAmount = 53,
                            CustomerAmount = 992
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Friday",
                            ContainerAmount = 38,
                            CustomerAmount = 1045
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Saturday",
                            ContainerAmount = 42,
                            CustomerAmount = 957
                        },
                        new
                        {
                            TemplatesId = 8,
                            DaysName = "Sunday",
                            ContainerAmount = 33,
                            CustomerAmount = 874
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Monday",
                            ContainerAmount = 53,
                            CustomerAmount = 835
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Tuesday",
                            ContainerAmount = 50,
                            CustomerAmount = 934
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Wednesday",
                            ContainerAmount = 27,
                            CustomerAmount = 879
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Thursday",
                            ContainerAmount = 40,
                            CustomerAmount = 983
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Friday",
                            ContainerAmount = 33,
                            CustomerAmount = 871
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Saturday",
                            ContainerAmount = 38,
                            CustomerAmount = 761
                        },
                        new
                        {
                            TemplatesId = 9,
                            DaysName = "Sunday",
                            ContainerAmount = 51,
                            CustomerAmount = 889
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Monday",
                            ContainerAmount = 42,
                            CustomerAmount = 987
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Tuesday",
                            ContainerAmount = 51,
                            CustomerAmount = 827
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Wednesday",
                            ContainerAmount = 39,
                            CustomerAmount = 901
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Thursday",
                            ContainerAmount = 53,
                            CustomerAmount = 992
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Friday",
                            ContainerAmount = 38,
                            CustomerAmount = 1045
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Saturday",
                            ContainerAmount = 42,
                            CustomerAmount = 957
                        },
                        new
                        {
                            TemplatesId = 10,
                            DaysName = "Sunday",
                            ContainerAmount = 33,
                            CustomerAmount = 874
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Monday",
                            ContainerAmount = 53,
                            CustomerAmount = 835
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Tuesday",
                            ContainerAmount = 50,
                            CustomerAmount = 934
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Wednesday",
                            ContainerAmount = 27,
                            CustomerAmount = 879
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Thursday",
                            ContainerAmount = 40,
                            CustomerAmount = 983
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Friday",
                            ContainerAmount = 33,
                            CustomerAmount = 871
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Saturday",
                            ContainerAmount = 38,
                            CustomerAmount = 761
                        },
                        new
                        {
                            TemplatesId = 11,
                            DaysName = "Sunday",
                            ContainerAmount = 51,
                            CustomerAmount = 889
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Monday",
                            ContainerAmount = 42,
                            CustomerAmount = 987
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Tuesday",
                            ContainerAmount = 51,
                            CustomerAmount = 827
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Wednesday",
                            ContainerAmount = 39,
                            CustomerAmount = 901
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Thursday",
                            ContainerAmount = 53,
                            CustomerAmount = 992
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Friday",
                            ContainerAmount = 38,
                            CustomerAmount = 1045
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Saturday",
                            ContainerAmount = 42,
                            CustomerAmount = 957
                        },
                        new
                        {
                            TemplatesId = 12,
                            DaysName = "Sunday",
                            ContainerAmount = 33,
                            CustomerAmount = 874
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Monday",
                            ContainerAmount = 53,
                            CustomerAmount = 835
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Tuesday",
                            ContainerAmount = 50,
                            CustomerAmount = 934
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Wednesday",
                            ContainerAmount = 27,
                            CustomerAmount = 879
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Thursday",
                            ContainerAmount = 40,
                            CustomerAmount = 983
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Friday",
                            ContainerAmount = 33,
                            CustomerAmount = 871
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Saturday",
                            ContainerAmount = 38,
                            CustomerAmount = 761
                        },
                        new
                        {
                            TemplatesId = 13,
                            DaysName = "Sunday",
                            ContainerAmount = 51,
                            CustomerAmount = 889
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Monday",
                            ContainerAmount = 44,
                            CustomerAmount = 989
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Tuesday",
                            ContainerAmount = 49,
                            CustomerAmount = 817
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Wednesday",
                            ContainerAmount = 38,
                            CustomerAmount = 924
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Thursday",
                            ContainerAmount = 55,
                            CustomerAmount = 988
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Friday",
                            ContainerAmount = 37,
                            CustomerAmount = 1041
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Saturday",
                            ContainerAmount = 44,
                            CustomerAmount = 947
                        },
                        new
                        {
                            TemplatesId = 14,
                            DaysName = "Sunday",
                            ContainerAmount = 32,
                            CustomerAmount = 879
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Monday",
                            ContainerAmount = 57,
                            CustomerAmount = 825
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Tuesday",
                            ContainerAmount = 54,
                            CustomerAmount = 914
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Wednesday",
                            ContainerAmount = 25,
                            CustomerAmount = 868
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Thursday",
                            ContainerAmount = 38,
                            CustomerAmount = 994
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Friday",
                            ContainerAmount = 35,
                            CustomerAmount = 842
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Saturday",
                            ContainerAmount = 37,
                            CustomerAmount = 790
                        },
                        new
                        {
                            TemplatesId = 15,
                            DaysName = "Sunday",
                            ContainerAmount = 52,
                            CustomerAmount = 878
                        });
                });

            modelBuilder.Entity("Branch", b =>
                {
                    b.HasOne("bumbo.Models.Country", "Country")
                        .WithMany("Branches")
                        .HasForeignKey("CountryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bumbo.Models.Prognosis", null)
                        .WithMany("Branches")
                        .HasForeignKey("PrognosisId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DataLayer.Models.Availability", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("Availabilitys")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataLayer.Models.EmployeeHasDepartment", b =>
                {
                    b.HasOne("DataLayer.Models.Department", "Department")
                        .WithMany("EmployeeHasDepartment")
                        .HasForeignKey("DepartmentName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee", "Employee")
                        .WithMany("EmployeeHasDepartment")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataLayer.Models.LabourRules", b =>
                {
                    b.HasOne("bumbo.Models.Country", "Country")
                        .WithMany("LabourRules")
                        .HasForeignKey("CountryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DataLayer.Models.PrognosisHasDaysHasDepartment", b =>
                {
                    b.HasOne("DataLayer.Models.Department", "Department")
                        .WithMany("PrognosisHasDaysHasDepartment")
                        .HasForeignKey("DepartmentName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bumbo.Models.PrognosisHasDays", "PrognosisHasDays")
                        .WithMany("PrognosisHasDaysHasDepartment")
                        .HasForeignKey("DayName", "PrognosisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("PrognosisHasDays");
                });

            modelBuilder.Entity("DataLayer.Models.Schedule", b =>
                {
                    b.HasOne("Branch", "Branch")
                        .WithMany("Schedules")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Department", "Department")
                        .WithMany("Schedules")
                        .HasForeignKey("DepartmentName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee", "Employee")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bumbo.Models.Template", null)
                        .WithMany("Schedules")
                        .HasForeignKey("TemplateId");

                    b.Navigation("Branch");

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataLayer.Models.SchoolSchedule", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("SchoolSchedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataLayer.Models.SwitchRequest", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("SwitchRequests")
                        .HasForeignKey("SendToEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Schedule", "Schedule")
                        .WithMany("SwitchRequests")
                        .HasForeignKey("EmployeeId", "BranchId", "Date")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Branch", "ManagerOfBranch")
                        .WithMany("Employees")
                        .HasForeignKey("ManagerOfBranchId");

                    b.Navigation("ManagerOfBranch");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bumbo.Models.BranchHasEmployee", b =>
                {
                    b.HasOne("Branch", "Branch")
                        .WithMany("BranchHasEmployees")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee", "Employee")
                        .WithMany("BranchEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Function", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionName");

                    b.Navigation("Branch");

                    b.Navigation("Employee");

                    b.Navigation("Function");
                });

            modelBuilder.Entity("bumbo.Models.BranchRequestsEmployee", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("BranchRequestsEmployee")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestStatus", "RequestStatus")
                        .WithMany("BranchRequestsEmployee")
                        .HasForeignKey("RequestStatusName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Branch", "Branch")
                        .WithMany("BranchRequestsEmployee")
                        .HasForeignKey("RequestToBranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Employee");

                    b.Navigation("RequestStatus");
                });

            modelBuilder.Entity("bumbo.Models.Norm", b =>
                {
                    b.HasOne("Branch", "Branch")
                        .WithMany("Norm")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("bumbo.Models.Prognosis", b =>
                {
                    b.HasOne("Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("bumbo.Models.PrognosisHasDays", b =>
                {
                    b.HasOne("bumbo.Models.Days", "Days")
                        .WithMany("PrognosisHasDays")
                        .HasForeignKey("DayName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bumbo.Models.Prognosis", "Prognosis")
                        .WithMany("PrognosisHasDays")
                        .HasForeignKey("PrognosisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Days");

                    b.Navigation("Prognosis");
                });

            modelBuilder.Entity("bumbo.Models.Template", b =>
                {
                    b.HasOne("Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("bumbo.Models.TemplateHasDays", b =>
                {
                    b.HasOne("bumbo.Models.Days", "Days")
                        .WithMany("TemplateHasDays")
                        .HasForeignKey("DaysName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bumbo.Models.Template", "Template")
                        .WithMany("TemplateHasDays")
                        .HasForeignKey("TemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Days");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Branch", b =>
                {
                    b.Navigation("BranchHasEmployees");

                    b.Navigation("BranchRequestsEmployee");

                    b.Navigation("Employees");

                    b.Navigation("Norm");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DataLayer.Models.Department", b =>
                {
                    b.Navigation("EmployeeHasDepartment");

                    b.Navigation("PrognosisHasDaysHasDepartment");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DataLayer.Models.Schedule", b =>
                {
                    b.Navigation("SwitchRequests");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("Availabilitys");

                    b.Navigation("BranchEmployees");

                    b.Navigation("BranchRequestsEmployee");

                    b.Navigation("EmployeeHasDepartment");

                    b.Navigation("Schedules");

                    b.Navigation("SchoolSchedules");

                    b.Navigation("SwitchRequests");
                });

            modelBuilder.Entity("RequestStatus", b =>
                {
                    b.Navigation("BranchRequestsEmployee");
                });

            modelBuilder.Entity("bumbo.Models.Country", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("LabourRules");
                });

            modelBuilder.Entity("bumbo.Models.Days", b =>
                {
                    b.Navigation("PrognosisHasDays");

                    b.Navigation("TemplateHasDays");
                });

            modelBuilder.Entity("bumbo.Models.Prognosis", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("PrognosisHasDays");
                });

            modelBuilder.Entity("bumbo.Models.PrognosisHasDays", b =>
                {
                    b.Navigation("PrognosisHasDaysHasDepartment");
                });

            modelBuilder.Entity("bumbo.Models.Template", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("TemplateHasDays");
                });
#pragma warning restore 612, 618
        }
    }
}
